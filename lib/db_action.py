import collections
from datetime import datetime
from lib.signalNotification import sendNotification

from pymongo import InsertOne, UpdateOne

from lib.Toolkit import isBlacklisted
from lib.DatabaseLayer import (getWatchlistCVE, 
                                getAllEntities,
                                updateWatchlistCVE,
                                getWatchlistCVEbyID,
                                getInfo,
                                setColUpdate,
                                updateWatchlistCVELastmodified)
class DatabaseAction(object):

    actions = collections.namedtuple("Actions", "InsertOne UpdateOne")(0, 1)

    def __init__(self, action, collection, doc, update_watchlist=False, signal_groups=[]):

        self.action = action
        self.collection = collection
        self.doc = doc
        self.update_watchlist = update_watchlist
        self.signal_groups = signal_groups

        if self.update_watchlist and collection == 'cves':
            setColUpdate('watchlist', datetime.now())
            self._update_watchlist()


    @property
    def entry(self):
        if self.action == self.actions.InsertOne:
            return InsertOne(self.doc)
        elif self.action == self.actions.UpdateOne:
            return UpdateOne({"id": self.doc["id"]}, {"$set": self.doc}, upsert=True)
