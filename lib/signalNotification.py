from lib.DatabaseLayer import getSubscriptions, getInfo

import subprocess
import datetime

def _makeMessage(cve, new):
    if new:
        msg = 'New '
    else:
        msg = 'Update regarding '

    if cve['entity'] == 'All':
        if cve['product'] != '':
            msg += "critical CVE impacting " + cve['product'] + ". https://cvepremium.circl.lu/cve/" + cve['id'] + " cvss3: " + str(cve['cvss3'])
        else:
            msg += "critical CVE. https://cvepremium.circl.lu/cve/" + cve['id'] + " cvss3: " + str(cve['cvss3'])
    else:
        msg += "CVE impacting " + cve['entity'] + " regarding " + cve['product'] + ". "\
            + "https://cvepremium.circl.lu/cve/" + cve['id'] + " cvss3: " + str(cve['cvss3'])
    return msg

def sendNotification(cve, new=False):
    subscriptions = getSubscriptions()
    if subscriptions is None:
        return
    registeredPhone = getInfo('subscriptions')['registeredPhone']
    message = _makeMessage(cve, new)
    with open('log/notification_logs', 'a+') as f:
        f.write(str(datetime.datetime.now())+ ' ' + message + '\n')
    for subscription in subscriptions:
        subprocess.run(["signal-cli", "-u", registeredPhone, "send", "-m", message, "-g", subscription['groupid']])